// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum EntryType {
  income
  expense
  borrow
  lend
}

enum DebtType {
  borrow
  lend
}

enum CategoryType {
  income
  expense
}

model Entry {
  id              String      @id @default(uuid())
  type            EntryType
  date            DateTime
  amount          Float
  methodId        String
  categoryId      String?     // income/expense のときのみ使用
  purpose         String?
  privatePurpose  String?
  note            String?
  evidenceNote    String?
  debtId          String?

  method          Method      @relation("MethodToEntry", fields: [methodId], references: [id])
  category        Category?   @relation("CategoryToEntry", fields: [categoryId], references: [id])
  debt            Debt?       @relation("DebtToEntry", fields: [debtId], references: [id])

  debtAsRoot      Debt?       @relation("DebtToRootEntry")

  createdAt       DateTime    @default(now())
}

model Debt {
  id              String      @id @default(uuid())
  type            DebtType
  rootEntryId     String      @unique
  date            DateTime
  amount          Float
  counterpart     String
  repaidAt        DateTime?
  memo            String?

  entry           Entry[]     @relation("DebtToEntry")
  rootEntry       Entry       @relation("DebtToRootEntry", fields: [rootEntryId], references: [id])
}

model Method {
  id              String   @id
  name            String
  initialBalance  Float?
  archived        Boolean?

  entries         Entry[]  @relation("MethodToEntry")
}

model Category {
  id     String        @id
  name   String
  type   CategoryType

  entries Entry[]      @relation("CategoryToEntry")
}